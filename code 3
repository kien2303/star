import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl
traffic = ctrl.Antecedent(np.arange(0,110,1), 'traffic')
distance = ctrl.Antecedent(np.arange(0,51,1), 'distance')
weather = ctrl.Antecedent(np.arange(0,11,1), 'weather')
demand = ctrl.Antecedent(np.arange(0,110,1),'demand')
customer= ctrl.Antecedent(np.arange(0,6,1), 'customer')
rp= ctrl.Antecedent(np.arange(0,101,1),'rp')
money= ctrl.Consequent(np.arange(0,16,1), 'money')
point=ctrl.Consequent(np.arange(0,11,1), 'point')
traffic['L']=fuzz.trimf(traffic.universe,[0,0,10])
traffic['M']=fuzz.trimf(traffic.universe,[5,15,20])
traffic['H']=fuzz.trimf(traffic.universe,[15,25,30])
distance['S']=fuzz.trimf(distance.universe,[0,0,10])
distance['M']=fuzz.trimf(distance.universe,[5,15,20])
distance['L']=fuzz.trimf(distance.universe,[15,25,40])
distance['V']=fuzz.trimf(distance.universe,[35,45,50])
weather['G']=fuzz.trimf(weather.universe,[0,0,1])
weather['M']=fuzz.trimf(weather.universe,[1,2,3])
weather['B']=fuzz.trimf(weather.universe,[2,2,3])
demand['L']=fuzz.trimf(demand.universe,[0,0,20])
demand['M']=fuzz.trimf(demand.universe,[15,25,40])
demand['H']=fuzz.trimf(demand.universe,[35,45,50])
customer['P']=fuzz.trimf(customer.universe,[0,0,3])
customer['A']=fuzz.trimf(customer.universe,[2,4,5])
customer['G']=fuzz.trimf(customer.universe,[3,5,5])
rp['L']=fuzz.trimf(rp.universe,[0,0,10])
rp['O']=fuzz.trimf(rp.universe,[5,15,20])
rp['E']=fuzz.trimf(rp.universe,[15,25,40])
money['L'] = fuzz.trimf(money.universe, [0, 0, 1])
money['M'] = fuzz.trimf(money.universe, [0.5, 1.5, 2])
money['H'] = fuzz.trimf(money.universe, [1.5, 2.5, 3])
money['V'] = fuzz.trimf(money.universe, [2.5, 3, 3])
point['N'] = fuzz.trimf(point.universe, [0, 0, 1])
point['F'] =fuzz.trimf(point.universe, [0.5, 1.5, 2])
point['M'] =fuzz.trimf(point.universe, [1.5, 2.5, 3])
point['H'] =fuzz.trimf(point.universe, [2.5, 3.5, 3.5])
rule1=ctrl.Rule(distance['S']&traffic['L']&demand['L'],money['L'])
rule2=ctrl.Rule(traffic['M']&distance['S']&demand['H'],money['M'])
rule3=ctrl.Rule(traffic['H']&distance['M']&demand['H'],money['H'])
rule4 = ctrl.Rule(distance['L'] & traffic['M'] & weather['G'], money['M'])
rule5 = ctrl.Rule(distance['L'] & traffic['H'] & weather['B'], money['V'])
rule6 = ctrl.Rule(distance['V'] & traffic['H'] & demand['H'], money['H'])
rule7 = ctrl.Rule(distance['M'] & traffic['L'] & demand['L'], money['M'])
rule8 = ctrl.Rule(distance['S'] & traffic['H'] & weather['B'], money['H'])
rule9 = ctrl.Rule(distance['V'] & weather['B'], money['V'])
rule10 = ctrl.Rule(distance['M'] & traffic['M'] & weather['M'], money['M'])
rule11 = ctrl.Rule(customer['G'] & rp['E'],point['H'])
rule12 = ctrl.Rule(customer['A'] & rp['O'], point['M'])
rule13 = ctrl.Rule(customer['P'] & rp['L'], point['N'])
rule14 = ctrl.Rule(distance['L'] & traffic['H'] & rp['O'],point['H'])
rule15 = ctrl.Rule(distance['M'] & traffic['M'] & customer['G'],point['M'])
rule16 = ctrl.Rule(customer['P'] &rp['L'], point['N'])
rule17 = ctrl.Rule(distance['V'] & weather['B'] & customer['G'],point['H'])
rule18 = ctrl.Rule(distance['S'] & customer['A'] & rp['O'],point['F'])
rule19 = ctrl.Rule(distance['L'] & traffic['H'] &rp['L'],point['F'])
rule20 = ctrl.Rule(distance['M'] & weather['M'] & customer['G'],point['M'])
control_system = ctrl.ControlSystem([rule1,rule2, rule3, rule4, rule5, rule6, rule7, rule8, rule9, rule10, rule11, rule12, rule13, rule14, rule15,rule16,rule17,rule18,rule19,rule20])
fuzzysystem = ctrl.ControlSystemSimulation(control_system)
fuzzysystem.input['traffic']=90
fuzzysystem.input[ 'distance'] = 30
fuzzysystem.input['weather'] = 2
fuzzysystem.input['rp'] =80
fuzzysystem.input['customer']=4
fuzzysystem.input['demand']=80
fuzzysystem.compute()
print ("Tien",fuzzysystem.output['money'])
print ("diem:", fuzzysystem.output['point'])
money.view(sim=fuzzysystem)
point.view(sim=fuzzysystem)
